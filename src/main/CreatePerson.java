/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import employee.Employee;
import java.util.ArrayList;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JDaza
 */
public class CreatePerson extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    private final Pattern eMailRegEx = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");;
    private ArrayList<Employee> employees = new ArrayList<>();

    /**
     * Creates new form CreatePerson
     */
    public CreatePerson() {
        initComponents();
        eMailPatternMsgLbl.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        personalDataPan = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        givenNameTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        familyNameTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        idTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        addressTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        eMailTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        sexCmb = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        childrenNumberSpn = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        civilStateCmb = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        professionTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        eduLevelTxt = new javax.swing.JTextField();
        birthDateTxt = new com.toedter.calendar.JDateChooser();
        nameReqLbl = new javax.swing.JLabel();
        familyNameReqLbl = new javax.swing.JLabel();
        idReqLbl = new javax.swing.JLabel();
        bDReqLbl = new javax.swing.JLabel();
        addresReqLbl = new javax.swing.JLabel();
        eMailReqLbl = new javax.swing.JLabel();
        sexReqLbl = new javax.swing.JLabel();
        civilStateReqLbl = new javax.swing.JLabel();
        childNumberReqLbl = new javax.swing.JLabel();
        professionReqLbl = new javax.swing.JLabel();
        eduLevelReqLbl = new javax.swing.JLabel();
        eMailPatternMsgLbl = new javax.swing.JLabel();
        laborDataPane = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        occupationTxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        contractTypeCmb = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        ePSTxt = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        aRLTxt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        layoffsTxt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        pensionTxt = new javax.swing.JTextField();
        dateOfEntryTxt = new com.toedter.calendar.JDateChooser();
        dateOfExitTxt = new com.toedter.calendar.JDateChooser();
        positionReqLbl = new javax.swing.JLabel();
        dOEReqLbl = new javax.swing.JLabel();
        dODReqLbl = new javax.swing.JLabel();
        contractReqLbl = new javax.swing.JLabel();
        ePSReqLbl = new javax.swing.JLabel();
        aRLReqLbl = new javax.swing.JLabel();
        layoffsReqLbl = new javax.swing.JLabel();
        pensionReqLbl = new javax.swing.JLabel();
        createTab = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeesTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Creación de nuevo empleado");

        jLabel22.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Nuevo Empleado");

        saveBtn.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        saveBtn.setText("Guardar");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        cancelBtn.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        cancelBtn.setText("Cancelar");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel23.setForeground(java.awt.Color.red);
        jLabel23.setText("*");

        jLabel24.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel24.setText("Campo requerido");

        personalDataPan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel1.setText("Datos personales");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel2.setText("Nombre:");

        givenNameTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel3.setText("Apellido");

        familyNameTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel4.setText("Identificación");

        idTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel5.setText("Fecha de nacimiento");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel6.setText("Dirección");

        addressTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel7.setText("E-mail");

        eMailTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        eMailTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                eMailTxtKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel8.setText("Sexo");

        sexCmb.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        sexCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "Masculino", "Femenino" }));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel9.setText("Número de hijos");

        childrenNumberSpn.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        childrenNumberSpn.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel10.setText("Estado civil");

        civilStateCmb.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        civilStateCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "Casado", "Soltero", "Viudo", "Divorciado" }));

        jLabel11.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel11.setText("Profesión");

        professionTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel12.setText("Nivel educativo");

        eduLevelTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        birthDateTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        nameReqLbl.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        nameReqLbl.setForeground(java.awt.Color.red);
        nameReqLbl.setText("*");

        familyNameReqLbl.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        familyNameReqLbl.setForeground(java.awt.Color.red);
        familyNameReqLbl.setText("*");

        idReqLbl.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        idReqLbl.setForeground(java.awt.Color.red);
        idReqLbl.setText("*");

        bDReqLbl.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        bDReqLbl.setForeground(java.awt.Color.red);
        bDReqLbl.setText("*");

        addresReqLbl.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        addresReqLbl.setForeground(java.awt.Color.red);
        addresReqLbl.setText("*");

        eMailReqLbl.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        eMailReqLbl.setForeground(java.awt.Color.red);
        eMailReqLbl.setText("*");

        sexReqLbl.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        sexReqLbl.setForeground(java.awt.Color.red);
        sexReqLbl.setText("*");

        civilStateReqLbl.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        civilStateReqLbl.setForeground(java.awt.Color.red);
        civilStateReqLbl.setText("*");

        childNumberReqLbl.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        childNumberReqLbl.setForeground(java.awt.Color.red);
        childNumberReqLbl.setText("*");

        professionReqLbl.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        professionReqLbl.setForeground(java.awt.Color.red);
        professionReqLbl.setText("*");

        eduLevelReqLbl.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        eduLevelReqLbl.setForeground(java.awt.Color.red);
        eduLevelReqLbl.setText("*");

        eMailPatternMsgLbl.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        eMailPatternMsgLbl.setForeground(java.awt.Color.red);
        eMailPatternMsgLbl.setText("Debe ingresar una dirección de correo electrónico válida. Por ejemplo: usuario1@ejemplo.com");

        javax.swing.GroupLayout personalDataPanLayout = new javax.swing.GroupLayout(personalDataPan);
        personalDataPan.setLayout(personalDataPanLayout);
        personalDataPanLayout.setHorizontalGroup(
            personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalDataPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eduLevelTxt)
                    .addGroup(personalDataPanLayout.createSequentialGroup()
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sexCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(personalDataPanLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sexReqLbl)))
                        .addGap(125, 125, 125)
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(personalDataPanLayout.createSequentialGroup()
                                .addComponent(civilStateCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(personalDataPanLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(civilStateReqLbl)
                                .addGap(18, 18, Short.MAX_VALUE)))
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(personalDataPanLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(childNumberReqLbl))
                            .addComponent(childrenNumberSpn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(personalDataPanLayout.createSequentialGroup()
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(personalDataPanLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eMailReqLbl)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(eMailTxt)
                    .addComponent(addressTxt)
                    .addGroup(personalDataPanLayout.createSequentialGroup()
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .addGroup(personalDataPanLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameReqLbl))
                            .addGroup(personalDataPanLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idReqLbl))
                            .addGroup(personalDataPanLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addresReqLbl))
                            .addComponent(givenNameTxt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(personalDataPanLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(familyNameReqLbl))
                            .addGroup(personalDataPanLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bDReqLbl))
                            .addComponent(birthDateTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                            .addComponent(familyNameTxt))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(professionTxt)
                    .addGroup(personalDataPanLayout.createSequentialGroup()
                        .addComponent(eMailPatternMsgLbl)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(personalDataPanLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(professionReqLbl)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(personalDataPanLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eduLevelReqLbl)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        personalDataPanLayout.setVerticalGroup(
            personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalDataPanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personalDataPanLayout.createSequentialGroup()
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nameReqLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(givenNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(idReqLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(personalDataPanLayout.createSequentialGroup()
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(familyNameReqLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(familyNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(bDReqLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(birthDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(addresReqLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(eMailReqLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eMailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eMailPatternMsgLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personalDataPanLayout.createSequentialGroup()
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(sexReqLbl)
                            .addComponent(jLabel10)
                            .addComponent(civilStateReqLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sexCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(personalDataPanLayout.createSequentialGroup()
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(childNumberReqLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(childrenNumberSpn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(civilStateCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(3, 3, 3)
                .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(professionReqLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(professionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalDataPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(eduLevelReqLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eduLevelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        laborDataPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        laborDataPane.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel13.setText("Datos laborales:");

        jLabel14.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel14.setText("Cargo");

        occupationTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel15.setText("Fecha de ingreso");

        jLabel16.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel16.setText("Fecha de salida");

        jLabel17.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel17.setText("Tipo de contrato");

        contractTypeCmb.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        contractTypeCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "Indefinido", "Término fijo", "Prestación de servicios" }));
        contractTypeCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contractTypeCmbActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel18.setText("EPS");

        ePSTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel19.setText("ARL");

        aRLTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel20.setText("Cesantías");

        layoffsTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel21.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel21.setText("Pensión");

        pensionTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        dateOfEntryTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        dateOfExitTxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        positionReqLbl.setForeground(java.awt.Color.red);
        positionReqLbl.setText("*");

        dOEReqLbl.setForeground(java.awt.Color.red);
        dOEReqLbl.setText("*");

        dODReqLbl.setForeground(java.awt.Color.red);
        dODReqLbl.setText("*");

        contractReqLbl.setForeground(java.awt.Color.red);
        contractReqLbl.setText("*");

        ePSReqLbl.setForeground(java.awt.Color.red);
        ePSReqLbl.setText("*");

        aRLReqLbl.setForeground(java.awt.Color.red);
        aRLReqLbl.setText("*");

        layoffsReqLbl.setForeground(java.awt.Color.red);
        layoffsReqLbl.setText("*");

        pensionReqLbl.setForeground(java.awt.Color.red);
        pensionReqLbl.setText("*");

        javax.swing.GroupLayout laborDataPaneLayout = new javax.swing.GroupLayout(laborDataPane);
        laborDataPane.setLayout(laborDataPaneLayout);
        laborDataPaneLayout.setHorizontalGroup(
            laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(laborDataPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(laborDataPaneLayout.createSequentialGroup()
                        .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addGroup(laborDataPaneLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(positionReqLbl))
                            .addGroup(laborDataPaneLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dOEReqLbl))
                            .addGroup(laborDataPaneLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dODReqLbl))
                            .addGroup(laborDataPaneLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(contractReqLbl)))
                        .addGap(0, 365, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, laborDataPaneLayout.createSequentialGroup()
                        .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(occupationTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateOfEntryTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateOfExitTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(contractTypeCmb, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, laborDataPaneLayout.createSequentialGroup()
                                .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ePSTxt)
                                    .addGroup(laborDataPaneLayout.createSequentialGroup()
                                        .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(laborDataPaneLayout.createSequentialGroup()
                                                .addComponent(jLabel18)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ePSReqLbl))
                                            .addGroup(laborDataPaneLayout.createSequentialGroup()
                                                .addComponent(jLabel20)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(layoffsReqLbl)))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(layoffsTxt))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(laborDataPaneLayout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pensionReqLbl))
                                    .addGroup(laborDataPaneLayout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(aRLReqLbl))
                                    .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(pensionTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                        .addComponent(aRLTxt)))))
                        .addContainerGap())))
        );
        laborDataPaneLayout.setVerticalGroup(
            laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(laborDataPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(positionReqLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(occupationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(dOEReqLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateOfEntryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(dODReqLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateOfExitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(contractReqLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contractTypeCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(aRLReqLbl)
                    .addComponent(ePSReqLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ePSTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aRLTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(laborDataPaneLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(layoffsReqLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(layoffsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pensionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(laborDataPaneLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(laborDataPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pensionReqLbl)
                            .addComponent(jLabel21))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(personalDataPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(laborDataPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel22))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel24)))
                        .addGap(98, 98, 98)
                        .addComponent(saveBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelBtn)
                        .addGap(12, 12, 12))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveBtn)
                            .addComponent(cancelBtn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(personalDataPan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(laborDataPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registro", jPanel1);

        jLabel42.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("Usuarios registrados");
        jLabel42.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        employeesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombres y Apellidos", "E-mail", "Tipo de contrato", "Cargo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(employeesTable);

        javax.swing.GroupLayout createTabLayout = new javax.swing.GroupLayout(createTab);
        createTab.setLayout(createTabLayout);
        createTabLayout.setHorizontalGroup(
            createTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 994, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel42)
                .addGap(382, 382, 382))
        );
        createTabLayout.setVerticalGroup(
            createTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registrados", createTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        boolean filled;
        String givenName = givenNameTxt.getText();
        String familyName = familyNameTxt.getText();
        String idNumber = idTxt.getText();
        Date birthDate = birthDateTxt.getDate();
        String address = addressTxt.getText();
        String eMail = eMailTxt.getText();
        String sex = sexCmb.getSelectedItem().toString();
        String numberOfChildren = childrenNumberSpn.getValue().toString();
        String civilState = civilStateCmb.getSelectedItem().toString();
        String eduLevel = eduLevelTxt.getText();
        String profession = professionTxt.getText();
        String occupation = occupationTxt.getText();
        Date dEnt = dateOfEntryTxt.getDate();
        Date dExit = dateOfExitTxt.getDate();
        String contract = contractTypeCmb.getSelectedItem().toString();
        String ePS = ePSTxt.getText();
        String aRL = aRLTxt.getText();
        String layoffs = layoffsTxt.getText();
        String pension = pensionTxt.getText();
        
        //Depending on the contract type, the date of departure will be required or not
        filled = checkNewEmployee();
        Employee e;
        if(filled) {
            int id = Integer.parseInt(idNumber);
            int childrenNumber = Integer.parseInt(numberOfChildren);
            if(contract.equals("Indefinido")) {
                e = new Employee(givenName, familyName, id, birthDate, address, eMail, sex, childrenNumber, civilState, profession, eduLevel, occupation, dEnt, contract, aRL, ePS, layoffs, pension);
            } else {
                e = new Employee(givenName, familyName, id, birthDate, address, eMail, sex, childrenNumber, civilState, profession, eduLevel, occupation, dEnt, dExit, contract, aRL, ePS, layoffs, pension);
            }
            employees.add(e);
            DefaultTableModel model = (DefaultTableModel) employeesTable.getModel();
            for(Employee employeeData: employees) {
                model.addRow(new String[]{
                    employeeData.getGivenName() + " " + employeeData.getFamilyName(),
                    employeeData.geteMail(),
                    employeeData.getContractType(),
                    employeeData.getPosition()
                });
            }
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void contractTypeCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contractTypeCmbActionPerformed
        // TODO add your handling code here:
        String contract = contractTypeCmb.getSelectedItem().toString();
        if(contract.equals("Indefinido")) {
            dODReqLbl.setVisible(false);
            dateOfExitTxt.setEnabled(false);
        } else {
            dODReqLbl.setVisible(true);
        }
    }//GEN-LAST:event_contractTypeCmbActionPerformed

    private void eMailTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eMailTxtKeyTyped
        Matcher eMailVerifier = eMailRegEx.matcher(eMailTxt.getText());
        if(eMailVerifier.find() == false) {
            eMailPatternMsgLbl.setVisible(true);
        } else {
            eMailPatternMsgLbl.setVisible(false);
        }
    }//GEN-LAST:event_eMailTxtKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreatePerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreatePerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreatePerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreatePerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new CreatePerson().setVisible(true);
            }
        });
    }
    
    private boolean isANumber(String s) {
        boolean num;
        try{
            Integer.parseInt(s);
            num = true;
        } catch(NumberFormatException e) {
            num = false;
        }
        return num;
    }
    
    private boolean isNoDate(Date d) {
        boolean noDate;
        try{
            d.getTime();
            noDate = false;
        } catch(NullPointerException e) {
            noDate = true;
        }
        
        return noDate;
    }
    
    private boolean checkNewEmployee() {
        boolean verified = true;
        String message = "";
        Matcher eMailVerifier = eMailRegEx.matcher(eMailTxt.getText());
        
        if(givenNameTxt.getText().isEmpty()) {
            givenNameTxt.grabFocus();
            message = "Por favor, introduzca el nombre del empleado";
            verified = false;
        } else if(familyNameTxt.getText().isEmpty()) {
            familyNameTxt.grabFocus();
            message = "Por favor, introduzca los apellidos del empleado";
            verified = false;
        } else if(idTxt.getText().isEmpty()) {
            idTxt.grabFocus();
            message = "Por favor, introduzca el número de identificación del empleado";
            verified = false;
        } else if(isANumber(idTxt.getText()) == false) {
            message = "Solo se pueden introducir números en el campo Identificación";
            idTxt.grabFocus();
            idTxt.selectAll();
            verified = false;
        } else if(isNoDate(birthDateTxt.getDate())) {
            birthDateTxt.grabFocus();
            message = "Por favor, introduzca la fecha de nacimiento del empleado";
            verified = false;
        } else if(addressTxt.getText().isEmpty()) {
            addressTxt.grabFocus();
            message = "Por favor, introduzca la dirección del empleado";
            verified = false;
        } else if(eMailTxt.getText().isEmpty()) {
            eMailTxt.grabFocus();
            message = "Por favor, introduzca la dirección de correo electrónico del empleado";
            verified = false;
        } else if(eMailVerifier.find() == false) {
            eMailTxt.grabFocus();
            message = "Por favor, ingrese una dirección de correo electrónico válida";
            verified = false;
        } else if(sexCmb.getSelectedItem().toString().equals("---")) {
            sexCmb.grabFocus();
            message = "Por favor, seleccione el sexo del empleado";
            verified = false;
        } else if(isANumber(childrenNumberSpn.getValue().toString()) == false) {
            childrenNumberSpn.grabFocus();
            message = "Solo se pueden introducir números en el campo Número de hijos";
            verified = false;
        } else if(civilStateCmb.getSelectedItem().toString().equals("---")) {
            civilStateCmb.grabFocus();
            message = "Por favor, seleccione el estado civil del empleado";
            verified = false;
        } else if(professionTxt.getText().isEmpty()) {
            professionTxt.grabFocus();
            message = "Por favor, introduzca el título del empleado";
            verified = false;
        } else if(eduLevelTxt.getText().isEmpty()) {
            eduLevelTxt.grabFocus();
            message = "Por favor, introduzca el nivel de formación del empleado";
            verified = false;
        } else if(occupationTxt.getText().isEmpty()) {
            occupationTxt.grabFocus();
            message = "Por favor, introduzca el cargo del empleado";
            verified = false;
        } else if(isNoDate(dateOfEntryTxt.getDate())) {
            dateOfEntryTxt.grabFocus();
            message = "Por favor, introduzca la fecha de ingreso del empleado";
            verified = false;
        } else if(!(contractTypeCmb.getSelectedItem().toString().equals("Indefinido")) && isNoDate(dateOfExitTxt.getDate())){
            dateOfExitTxt.grabFocus();
            message = "Por favor, introduzca la fecha de salida del empleado";
            verified = false;
        } else if(!(contractTypeCmb.getSelectedItem().toString().equals("Indefinido")) && dateOfExitTxt.getDate().before(dateOfEntryTxt.getDate())) {
            message = "No puede especificar como fecha de salida una fecha antes de la fecha de entrada";
            dateOfExitTxt.grabFocus();
            verified = false;
        } else if(contractTypeCmb.getSelectedItem().toString().equals("---")) {
            contractTypeCmb.grabFocus();
            message = "Por favor, seleccione el tipo de contrato por el cual el empleado está vinculado a esta empresa";
            verified = false;
        } else if(ePSTxt.getText().isEmpty()) {
            ePSTxt.grabFocus();
            message = "Por favor, introduzca la EPS a la que está afiliado el empleado";
            verified = false;
        } else if(aRLTxt.getText().isEmpty()) {
            aRLTxt.grabFocus();
            message = "Por favor, introduzca la ARL a la que está afiliado el empleado";
            verified = false;
        } else if(layoffsTxt.getText().isEmpty()) {
            layoffsTxt.grabFocus();
            message = "Por favor, introduzca el fondo de cesantías al que está afiliado el empleado";
            verified = false;
        } else if(pensionTxt.getText().isEmpty()) {
            pensionTxt.grabFocus();
            message = "Por favor, introduzca el fondo de pensiones al que está afiliado el empleado";
            verified = false;
        }
        
        if(verified) {
            message = "Datos enviados exitosamente.\nPuede consultarla información del empleado en la pestaña Registrados.";
        }
        
        showMessage(message);
        return verified;
    }
    
    private void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aRLReqLbl;
    private javax.swing.JTextField aRLTxt;
    private javax.swing.JLabel addresReqLbl;
    private javax.swing.JTextField addressTxt;
    private javax.swing.JLabel bDReqLbl;
    private com.toedter.calendar.JDateChooser birthDateTxt;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel childNumberReqLbl;
    private javax.swing.JSpinner childrenNumberSpn;
    private javax.swing.JComboBox<String> civilStateCmb;
    private javax.swing.JLabel civilStateReqLbl;
    private javax.swing.JLabel contractReqLbl;
    private javax.swing.JComboBox<String> contractTypeCmb;
    private javax.swing.JPanel createTab;
    private javax.swing.JLabel dODReqLbl;
    private javax.swing.JLabel dOEReqLbl;
    private com.toedter.calendar.JDateChooser dateOfEntryTxt;
    private com.toedter.calendar.JDateChooser dateOfExitTxt;
    private javax.swing.JLabel eMailPatternMsgLbl;
    private javax.swing.JLabel eMailReqLbl;
    private javax.swing.JTextField eMailTxt;
    private javax.swing.JLabel ePSReqLbl;
    private javax.swing.JTextField ePSTxt;
    private javax.swing.JLabel eduLevelReqLbl;
    private javax.swing.JTextField eduLevelTxt;
    private javax.swing.JTable employeesTable;
    private javax.swing.JLabel familyNameReqLbl;
    private javax.swing.JTextField familyNameTxt;
    private javax.swing.JTextField givenNameTxt;
    private javax.swing.JLabel idReqLbl;
    private javax.swing.JTextField idTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel laborDataPane;
    private javax.swing.JLabel layoffsReqLbl;
    private javax.swing.JTextField layoffsTxt;
    private javax.swing.JLabel nameReqLbl;
    private javax.swing.JTextField occupationTxt;
    private javax.swing.JLabel pensionReqLbl;
    private javax.swing.JTextField pensionTxt;
    private javax.swing.JPanel personalDataPan;
    private javax.swing.JLabel positionReqLbl;
    private javax.swing.JLabel professionReqLbl;
    private javax.swing.JTextField professionTxt;
    private javax.swing.JButton saveBtn;
    private javax.swing.JComboBox<String> sexCmb;
    private javax.swing.JLabel sexReqLbl;
    // End of variables declaration//GEN-END:variables
}
